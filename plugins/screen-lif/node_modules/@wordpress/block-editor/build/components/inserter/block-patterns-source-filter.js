"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PATTERN_TYPES = exports.PATTERN_SOURCE_FILTERS = void 0;
exports.default = BlockPatternsSourceFilter;
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _components = require("@wordpress/components");
/**
 * WordPress dependencies
 */

const PATTERN_TYPES = {
  synced: 'synced',
  unsynced: 'unsynced',
  user: 'user',
  theme: 'theme'
};
exports.PATTERN_TYPES = PATTERN_TYPES;
const patternSourceOptions = [{
  value: 'all',
  label: (0, _i18n.__)('All pattern types')
}, {
  value: PATTERN_TYPES.theme,
  label: (0, _i18n.__)('Theme patterns')
}, {
  value: PATTERN_TYPES.user,
  label: (0, _i18n.__)('My patterns')
}];
const PATTERN_SOURCE_FILTERS = patternSourceOptions.reduce((patternSourceFilters, {
  value,
  label
}) => {
  patternSourceFilters[value] = label;
  return patternSourceFilters;
}, {});
exports.PATTERN_SOURCE_FILTERS = PATTERN_SOURCE_FILTERS;
function BlockPatternsSourceFilter({
  onChange,
  value
}) {
  return (0, _element.createElement)(_components.SelectControl, {
    className: "block-editor-block-patterns__source-filter",
    label: (0, _i18n.__)('Pattern source'),
    options: patternSourceOptions,
    value: value,
    onChange: onChange,
    "aria-label": (0, _i18n.__)('Filter patterns by type'),
    hideLabelFromVision: true
  });
}
//# sourceMappingURL=block-patterns-source-filter.js.map