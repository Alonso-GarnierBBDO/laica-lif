{"version":3,"names":["_element","require","_classnames","_interopRequireDefault","_blocks","_components","_compose","_icons","_data","_i18n","_dom","_keycodes","_leaf","_useListViewScrollIntoView","_button","_blockContents","_context","_utils","_store","_useBlockDisplayInformation","_blockLock","_ariaReferencedText","ListViewBlock","block","clientId","isDragged","isSelected","isBranchSelected","selectBlock","position","level","rowCount","siblingBlockCount","showBlockMovers","path","isExpanded","selectedClientIds","isSyncedBranch","cellRef","useRef","rowRef","isHovered","setIsHovered","useState","isLocked","canEdit","useBlockLock","isFirstSelectedBlock","isLastSelectedBlock","length","toggleBlockHighlight","useDispatch","blockEditorStore","blockInformation","useBlockDisplayInformation","blockTitle","name","title","__","useSelect","select","getBlock","blockName","getBlockName","blockEditingMode","getBlockEditingMode","showBlockActions","hasBlockSupport","instanceId","useInstanceId","descriptionId","blockPositionDescription","getBlockPositionDescription","blockAriaLabel","sprintf","settingsAriaLabel","isTreeGridMounted","expand","collapse","BlockSettingsMenu","listViewInstanceId","expandedState","setInsertedBlock","treeGridElementRef","useListViewContext","hasSiblings","hasRenderedMovers","moverCellClassName","classnames","listViewBlockSettingsClassName","useEffect","current","focus","onKeyDown","event","keyCode","ESCAPE","defaultPrevented","stopPropagation","preventDefault","undefined","onMouseEnter","useCallback","onMouseLeave","selectEditorBlock","updateFocusAndSelection","focusClientId","shouldSelectBlock","getFocusElement","row","querySelector","focusable","find","focusElement","window","requestAnimationFrame","toggleExpanded","colSpan","classes","isSynced","dropdownClientIds","includes","useListViewScrollIntoView","rowItemRef","currentlyEditingBlockInCanvas","createElement","default","className","onFocus","onBlur","id","ref","__experimentalTreeGridCell","tabIndex","onClick","onToggleExpanded","ariaLabel","ariaDescribedBy","Fragment","withoutGridItem","__experimentalTreeGridItem","BlockMoverUpButton","orientation","clientIds","BlockMoverDownButton","icon","moreVertical","label","toggleProps","disableOpenOnArrowDown","__experimentalSelectBlock","_default","memo","exports"],"sources":["@wordpress/block-editor/src/components/list-view/block.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport {\n\t__experimentalTreeGridCell as TreeGridCell,\n\t__experimentalTreeGridItem as TreeGridItem,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { moreVertical } from '@wordpress/icons';\nimport {\n\tuseState,\n\tuseRef,\n\tuseEffect,\n\tuseCallback,\n\tmemo,\n} from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { focus } from '@wordpress/dom';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport ListViewLeaf from './leaf';\nimport useListViewScrollIntoView from './use-list-view-scroll-into-view';\nimport {\n\tBlockMoverUpButton,\n\tBlockMoverDownButton,\n} from '../block-mover/button';\nimport ListViewBlockContents from './block-contents';\nimport { useListViewContext } from './context';\nimport { getBlockPositionDescription } from './utils';\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport { useBlockLock } from '../block-lock';\nimport AriaReferencedText from './aria-referenced-text';\n\nfunction ListViewBlock( {\n\tblock: { clientId },\n\tisDragged,\n\tisSelected,\n\tisBranchSelected,\n\tselectBlock,\n\tposition,\n\tlevel,\n\trowCount,\n\tsiblingBlockCount,\n\tshowBlockMovers,\n\tpath,\n\tisExpanded,\n\tselectedClientIds,\n\tisSyncedBranch,\n} ) {\n\tconst cellRef = useRef( null );\n\tconst rowRef = useRef( null );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\n\tconst { isLocked, canEdit } = useBlockLock( clientId );\n\n\tconst isFirstSelectedBlock =\n\t\tisSelected && selectedClientIds[ 0 ] === clientId;\n\tconst isLastSelectedBlock =\n\t\tisSelected &&\n\t\tselectedClientIds[ selectedClientIds.length - 1 ] === clientId;\n\n\tconst { toggleBlockHighlight } = useDispatch( blockEditorStore );\n\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\tconst blockTitle =\n\t\tblockInformation?.name || blockInformation?.title || __( 'Untitled' );\n\n\tconst block = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlock( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockName = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockName( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst blockEditingMode = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlockEditingMode( clientId ),\n\t\t[ clientId ]\n\t);\n\n\tconst showBlockActions =\n\t\t// When a block hides its toolbar it also hides the block settings menu,\n\t\t// since that menu is part of the toolbar in the editor canvas.\n\t\t// List View respects this by also hiding the block settings menu.\n\t\thasBlockSupport( blockName, '__experimentalToolbar', true ) &&\n\t\t// Don't show the settings menu if block is disabled or content only.\n\t\tblockEditingMode === 'default';\n\tconst instanceId = useInstanceId( ListViewBlock );\n\tconst descriptionId = `list-view-block-select-button__${ instanceId }`;\n\tconst blockPositionDescription = getBlockPositionDescription(\n\t\tposition,\n\t\tsiblingBlockCount,\n\t\tlevel\n\t);\n\n\tconst blockAriaLabel = isLocked\n\t\t? sprintf(\n\t\t\t\t// translators: %s: The title of the block. This string indicates a link to select the locked block.\n\t\t\t\t__( '%s (locked)' ),\n\t\t\t\tblockTitle\n\t\t  )\n\t\t: blockTitle;\n\n\tconst settingsAriaLabel = sprintf(\n\t\t// translators: %s: The title of the block.\n\t\t__( 'Options for %s' ),\n\t\tblockTitle\n\t);\n\n\tconst {\n\t\tisTreeGridMounted,\n\t\texpand,\n\t\tcollapse,\n\t\tBlockSettingsMenu,\n\t\tlistViewInstanceId,\n\t\texpandedState,\n\t\tsetInsertedBlock,\n\t\ttreeGridElementRef,\n\t} = useListViewContext();\n\n\tconst hasSiblings = siblingBlockCount > 0;\n\tconst hasRenderedMovers = showBlockMovers && hasSiblings;\n\tconst moverCellClassName = classnames(\n\t\t'block-editor-list-view-block__mover-cell',\n\t\t{ 'is-visible': isHovered || isSelected }\n\t);\n\n\tconst listViewBlockSettingsClassName = classnames(\n\t\t'block-editor-list-view-block__menu-cell',\n\t\t{ 'is-visible': isHovered || isFirstSelectedBlock }\n\t);\n\n\t// If ListView has experimental features related to the Persistent List View,\n\t// only focus the selected list item on mount; otherwise the list would always\n\t// try to steal the focus from the editor canvas.\n\tuseEffect( () => {\n\t\tif ( ! isTreeGridMounted && isSelected ) {\n\t\t\tcellRef.current.focus();\n\t\t}\n\t}, [] );\n\n\t// If multiple blocks are selected, deselect all blocks when the user\n\t// presses the escape key.\n\tconst onKeyDown = ( event ) => {\n\t\tif (\n\t\t\tevent.keyCode === ESCAPE &&\n\t\t\t! event.defaultPrevented &&\n\t\t\tselectedClientIds.length > 0\n\t\t) {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tselectBlock( event, undefined );\n\t\t}\n\t};\n\n\tconst onMouseEnter = useCallback( () => {\n\t\tsetIsHovered( true );\n\t\ttoggleBlockHighlight( clientId, true );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\tconst onMouseLeave = useCallback( () => {\n\t\tsetIsHovered( false );\n\t\ttoggleBlockHighlight( clientId, false );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\n\tconst selectEditorBlock = useCallback(\n\t\t( event ) => {\n\t\t\tselectBlock( event, clientId );\n\t\t\tevent.preventDefault();\n\t\t},\n\t\t[ clientId, selectBlock ]\n\t);\n\n\tconst updateFocusAndSelection = useCallback(\n\t\t( focusClientId, shouldSelectBlock ) => {\n\t\t\tif ( shouldSelectBlock ) {\n\t\t\t\tselectBlock( undefined, focusClientId, null, null );\n\t\t\t}\n\n\t\t\tconst getFocusElement = () => {\n\t\t\t\tconst row = treeGridElementRef.current?.querySelector(\n\t\t\t\t\t`[role=row][data-block=\"${ focusClientId }\"]`\n\t\t\t\t);\n\t\t\t\tif ( ! row ) return null;\n\t\t\t\t// Focus the first focusable in the row, which is the ListViewBlockSelectButton.\n\t\t\t\treturn focus.focusable.find( row )[ 0 ];\n\t\t\t};\n\n\t\t\tlet focusElement = getFocusElement();\n\t\t\tif ( focusElement ) {\n\t\t\t\tfocusElement.focus();\n\t\t\t} else {\n\t\t\t\t// The element hasn't been painted yet. Defer focusing on the next frame.\n\t\t\t\t// This could happen when all blocks have been deleted and the default block\n\t\t\t\t// hasn't been added to the editor yet.\n\t\t\t\twindow.requestAnimationFrame( () => {\n\t\t\t\t\tfocusElement = getFocusElement();\n\t\t\t\t\t// Ignore if the element still doesn't exist.\n\t\t\t\t\tif ( focusElement ) {\n\t\t\t\t\t\tfocusElement.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\t[ selectBlock, treeGridElementRef ]\n\t);\n\n\tconst toggleExpanded = useCallback(\n\t\t( event ) => {\n\t\t\t// Prevent shift+click from opening link in a new window when toggling.\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif ( isExpanded === true ) {\n\t\t\t\tcollapse( clientId );\n\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\texpand( clientId );\n\t\t\t}\n\t\t},\n\t\t[ clientId, expand, collapse, isExpanded ]\n\t);\n\n\tlet colSpan;\n\tif ( hasRenderedMovers ) {\n\t\tcolSpan = 2;\n\t} else if ( ! showBlockActions ) {\n\t\tcolSpan = 3;\n\t}\n\n\tconst classes = classnames( {\n\t\t'is-selected': isSelected,\n\t\t'is-first-selected': isFirstSelectedBlock,\n\t\t'is-last-selected': isLastSelectedBlock,\n\t\t'is-branch-selected': isBranchSelected,\n\t\t'is-synced-branch': isSyncedBranch,\n\t\t'is-dragging': isDragged,\n\t\t'has-single-cell': ! showBlockActions,\n\t\t'is-synced': blockInformation?.isSynced,\n\t} );\n\n\t// Only include all selected blocks if the currently clicked on block\n\t// is one of the selected blocks. This ensures that if a user attempts\n\t// to alter a block that isn't part of the selection, they're still able\n\t// to do so.\n\tconst dropdownClientIds = selectedClientIds.includes( clientId )\n\t\t? selectedClientIds\n\t\t: [ clientId ];\n\n\t// Pass in a ref to the row, so that it can be scrolled\n\t// into view when selected. For long lists, the placeholder for the\n\t// selected block is also observed, within ListViewLeafPlaceholder.\n\tuseListViewScrollIntoView( {\n\t\tisSelected,\n\t\trowItemRef: rowRef,\n\t\tselectedClientIds,\n\t} );\n\n\t// Detect if there is a block in the canvas currently being edited and multi-selection is not happening.\n\tconst currentlyEditingBlockInCanvas =\n\t\tisSelected && selectedClientIds.length === 1;\n\n\treturn (\n\t\t<ListViewLeaf\n\t\t\tclassName={ classes }\n\t\t\tonKeyDown={ onKeyDown }\n\t\t\tonMouseEnter={ onMouseEnter }\n\t\t\tonMouseLeave={ onMouseLeave }\n\t\t\tonFocus={ onMouseEnter }\n\t\t\tonBlur={ onMouseLeave }\n\t\t\tlevel={ level }\n\t\t\tposition={ position }\n\t\t\trowCount={ rowCount }\n\t\t\tpath={ path }\n\t\t\tid={ `list-view-${ listViewInstanceId }-block-${ clientId }` }\n\t\t\tdata-block={ clientId }\n\t\t\tdata-expanded={ canEdit ? isExpanded : undefined }\n\t\t\tref={ rowRef }\n\t\t>\n\t\t\t<TreeGridCell\n\t\t\t\tclassName=\"block-editor-list-view-block__contents-cell\"\n\t\t\t\tcolSpan={ colSpan }\n\t\t\t\tref={ cellRef }\n\t\t\t\taria-selected={ !! isSelected }\n\t\t\t>\n\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t<div className=\"block-editor-list-view-block__contents-container\">\n\t\t\t\t\t\t<ListViewBlockContents\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectEditorBlock }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\ttabIndex={\n\t\t\t\t\t\t\t\tcurrentlyEditingBlockInCanvas ? 0 : tabIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tisExpanded={ canEdit ? isExpanded : undefined }\n\t\t\t\t\t\t\tselectedClientIds={ selectedClientIds }\n\t\t\t\t\t\t\tariaLabel={ blockAriaLabel }\n\t\t\t\t\t\t\tariaDescribedBy={ descriptionId }\n\t\t\t\t\t\t\tupdateFocusAndSelection={ updateFocusAndSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AriaReferencedText id={ descriptionId }>\n\t\t\t\t\t\t\t{ blockPositionDescription }\n\t\t\t\t\t\t</AriaReferencedText>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</TreeGridCell>\n\t\t\t{ hasRenderedMovers && (\n\t\t\t\t<>\n\t\t\t\t\t<TreeGridCell\n\t\t\t\t\t\tclassName={ moverCellClassName }\n\t\t\t\t\t\twithoutGridItem\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t</TreeGridCell>\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t{ showBlockActions && BlockSettingsMenu && (\n\t\t\t\t<TreeGridCell\n\t\t\t\t\tclassName={ listViewBlockSettingsClassName }\n\t\t\t\t\taria-selected={ !! isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t<BlockSettingsMenu\n\t\t\t\t\t\t\tclientIds={ dropdownClientIds }\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\t\t\tlabel={ settingsAriaLabel }\n\t\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\tclassName: 'block-editor-list-view-block__menu',\n\t\t\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisableOpenOnArrowDown\n\t\t\t\t\t\t\texpand={ expand }\n\t\t\t\t\t\t\texpandedState={ expandedState }\n\t\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\n\t\t\t\t\t\t\t__experimentalSelectBlock={\n\t\t\t\t\t\t\t\tupdateFocusAndSelection\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t) }\n\t\t</ListViewLeaf>\n\t);\n}\n\nexport default memo( ListViewBlock );\n"],"mappings":"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"}